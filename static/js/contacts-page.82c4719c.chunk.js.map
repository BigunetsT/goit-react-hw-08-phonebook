{"version":3,"sources":["components/ContactForm/ContactForm.module.scss","components/Modal/Modal.module.scss","components/Filter/Filter.module.scss","components/ContactList/ContactList.module.scss","components/ContactItem/ContactItem.module.scss","components/ContactForm/ContactForm.jsx","components/AddContact/AddContact.js","components/Modal/Modal.jsx","components/Filter/Filter.jsx","components/UpdateContact/UpdateContact.js","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.jsx","pages/ContactsPage.js"],"names":["module","exports","ContactForm","name","number","onSubmit","onChange","textBtn","className","styles","contactForm","title","label","input","type","value","placeholder","pattern","required","addContactBtn","INITIAL_STATE","AddContact","state","handleChange","e","currentTarget","setState","prev","handleSubmit","preventDefault","props","contacts","map","item","toLowerCase","includes","alert","reset","this","Component","connect","contactsSelectors","getContacts","dispatch","contactsOperations","addContact","modalRoot","document","querySelector","Modal","handleKeyDown","event","code","onClose","handleBackdropClick","target","window","addEventListener","removeEventListener","createPortal","overlay","onClick","modal","closeModalBtn","children","getFilter","changeFilter","filter","UpdateContact","id","updateContact","ContactItem","showModal","openModal","closeModal","onDelete","contactItem","contactData","phoneNumber","contactOperations","contactBtn","deleteContact","getSortContacts","contactsList","ContactsPage","fetchContacts","Button","variant"],"mappings":"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","file":"static/js/contacts-page.82c4719c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactForm\":\"ContactForm_contactForm__1jXwC\",\"title\":\"ContactForm_title__2AUJn\",\"label\":\"ContactForm_label__1_9aD\",\"input\":\"ContactForm_input__2vrgd\",\"addContactBtn\":\"ContactForm_addContactBtn__1lBji\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"Modal_overlay__3jN6Q\",\"modal\":\"Modal_modal__L_zlP\",\"closeModalBtn\":\"Modal_closeModalBtn__33InE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__3QK9A\",\"label\":\"Filter_label__1YEKJ\",\"input\":\"Filter_input__35LBw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsList\":\"ContactList_contactsList__n3jNT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"phoneNumber\":\"ContactItem_phoneNumber__3XFla\",\"contactItem\":\"ContactItem_contactItem__3KsoJ\",\"name\":\"ContactItem_name__1Wwl7\",\"contactBtn\":\"ContactItem_contactBtn__2t_q0\",\"ring\":\"ContactItem_ring__1_krW\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './ContactForm.module.scss';\n\nconst ContactForm = ({ name, number, onSubmit, onChange, textBtn }) => {\n  return (\n    <form onSubmit={onSubmit} className={styles.contactForm}>\n      <h2 className={styles.title}>Дані контакту: </h2>\n      <label className={styles.label}>\n        Ім'я\n        <input\n          className={styles.input}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          placeholder=\"введіть ім'я\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          onChange={onChange}\n        />\n      </label>\n      <label className={styles.label}>\n        Номер телефону\n        <input\n          className={styles.input}\n          type=\"tel\"\n          name=\"number\"\n          placeholder=\"XXX-XX-XX\"\n          value={number}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          onChange={onChange}\n        />\n      </label>\n      <button type=\"submit\" className={styles.addContactBtn}>\n        {textBtn}\n      </button>\n    </form>\n  );\n};\n\nContactForm.propTypes = {\n  name: PropTypes.string,\n  number: PropTypes.string,\n  onSubmit: PropTypes.func,\n  onChange: PropTypes.func,\n  textBtn: PropTypes.string,\n};\nexport default ContactForm;\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ContactForm from '../ContactForm';\r\nimport { connect } from 'react-redux';\r\nimport { contactsOperations } from '../../redux/contacts';\r\nimport { contactsSelectors } from '../../redux/contacts';\r\n\r\nconst INITIAL_STATE = {\r\n  name: '',\r\n  number: '',\r\n};\r\nclass AddContact extends Component {\r\n  static propTypes = {\r\n    INITIAL_STATE: PropTypes.shape({\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }),\r\n    onSubmit: PropTypes.func,\r\n  };\r\n  state = { ...INITIAL_STATE };\r\n  handleChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n    this.setState(prev => ({\r\n      ...prev,\r\n      [name]: value,\r\n    }));\r\n  };\r\n  handleSubmit = e => {\r\n    const { name } = this.state;\r\n    e.preventDefault();\r\n    if (\r\n      this.props.contacts\r\n        .map(item => item.name.toLowerCase())\r\n        .includes(name.toLowerCase())\r\n    ) {\r\n      alert(`${name} is already in contacts`);\r\n      return;\r\n    }\r\n    this.props.onSubmit(this.state);\r\n    this.reset();\r\n  };\r\n  reset = () => {\r\n    this.setState({ ...INITIAL_STATE });\r\n  };\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <ContactForm\r\n        onSubmit={this.handleSubmit}\r\n        onChange={this.handleChange}\r\n        name={name}\r\n        number={number}\r\n        textBtn=\"Додати контакт\"\r\n      />\r\n    );\r\n  }\r\n}\r\nconst mapStateToPrope = state => ({\r\n  contacts: contactsSelectors.getContacts(state),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onSubmit: ({ name, number }) =>\r\n    dispatch(contactsOperations.addContact({ name, number })),\r\n});\r\n\r\nexport default connect(mapStateToPrope, mapDispatchToProps)(AddContact);\r\n","import React, { Component } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Modal.module.scss';\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\nexport default class Modal extends Component {\r\n  static propTypes = {\r\n    onClose: PropTypes.func,\r\n    children: PropTypes.node,\r\n  };\r\n  componentDidMount() {\r\n    window.addEventListener('keydown', this.handleKeyDown);\r\n  }\r\n  componentWillUnmount() {\r\n    window.removeEventListener('keydown', this.handleKeyDown);\r\n  }\r\n  handleKeyDown = event => {\r\n    if (event.code === 'Escape') {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n  handleBackdropClick = event => {\r\n    if (event.currentTarget === event.target) {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n  render() {\r\n    return createPortal(\r\n      <div className={styles.overlay} onClick={this.handleBackdropClick}>\r\n        <div className={styles.modal}>\r\n          <button\r\n            type=\"button\"\r\n            className={styles.closeModalBtn}\r\n            onClick={() => {\r\n              this.props.onClose();\r\n            }}\r\n          >\r\n            X\r\n          </button>\r\n          {this.props.children}\r\n        </div>\r\n      </div>,\r\n      modalRoot,\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Filter.module.scss';\nimport { connect } from 'react-redux';\nimport { contactsSelectors, changeFilter } from '../../redux/contacts';\n\nconst Filter = ({ value, onChange }) => {\n  return (\n    <div className={styles.filter}>\n      <label className={styles.label}>\n        Пошук контакта за ім'ям\n        <input\n          type=\"text\"\n          className={styles.input}\n          value={value}\n          onChange={onChange}\n        />\n      </label>\n    </div>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\nconst mapStateToProps = state => ({\n  value: contactsSelectors.getFilter(state),\n});\nconst mapDispatchToProps = dispatch => ({\n  onChange: e => dispatch(changeFilter(e.target.value)),\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ContactForm from '../ContactForm';\r\nimport { connect } from 'react-redux';\r\nimport { contactsOperations } from '../../redux/contacts';\r\nimport { contactsSelectors } from '../../redux/contacts';\r\n\r\nclass UpdateContact extends Component {\r\n  static propTypes = {\r\n    INITIAL_STATE: PropTypes.shape({\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }),\r\n    onSubmit: PropTypes.func,\r\n  };\r\n  state = {\r\n    name: this.props.name,\r\n    number: this.props.number,\r\n    id: this.props.id,\r\n  };\r\n\r\n  handleChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n    this.setState(prev => ({\r\n      ...prev,\r\n      [name]: value,\r\n    }));\r\n  };\r\n  handleSubmit = e => {\r\n    const { name } = this.state;\r\n    e.preventDefault();\r\n    if (\r\n      this.props.contacts\r\n        .map(item => item.name.toLowerCase())\r\n        .includes(name.toLowerCase())\r\n    ) {\r\n      alert(`${name} is already in contacts`);\r\n      return;\r\n    }\r\n    this.props.onSubmit(this.state);\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <ContactForm\r\n        onSubmit={this.handleSubmit}\r\n        onChange={this.handleChange}\r\n        name={name}\r\n        number={number}\r\n        textBtn=\"Зберегти зміни\"\r\n      />\r\n    );\r\n  }\r\n}\r\nconst mapStateToPrope = state => ({\r\n  contacts: contactsSelectors.getContacts(state),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onSubmit: ({ id, name, number }) =>\r\n    dispatch(contactsOperations.updateContact({ id, name, number })),\r\n});\r\n\r\nexport default connect(mapStateToPrope, mapDispatchToProps)(UpdateContact);\r\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './ContactItem.module.scss';\nimport Modal from '../Modal';\nimport UpdateContact from '../UpdateContact';\nimport { connect } from 'react-redux';\nimport { contactsOperations } from '../../redux/contacts';\n\nclass ContactItem extends Component {\n  state = {\n    showModal: false,\n  };\n  openModal = () => {\n    this.setState({ showModal: true });\n  };\n  closeModal = () => {\n    this.setState({ showModal: false });\n  };\n\n  render() {\n    const { id, name, number, onDelete } = this.props;\n    return (\n      <li name={name} number={number} className={styles.contactItem}>\n        <div className={styles.contactData}>\n          <span className={styles.name}>{name} :</span>\n          <span className={styles.phoneNumber}>{number}</span>\n        </div>\n        <div className={styles.contactOperations}>\n          <button\n            type=\"button\"\n            className={styles.contactBtn}\n            onClick={() => onDelete(id)}\n          >\n            Видалити\n          </button>\n          <button\n            type=\"button\"\n            className={styles.contactBtn}\n            onClick={() => this.openModal()}\n          >\n            Редагувати\n          </button>\n          {this.state.showModal && (\n            <Modal onClose={this.closeModal}>\n              <UpdateContact name={name} number={number} id={id} />\n            </Modal>\n          )}\n        </div>\n      </li>\n    );\n  }\n}\n\nContactItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  onDelete: PropTypes.func,\n  onUpdate: PropTypes.func,\n};\nconst mapDispatchToProps = dispatch => ({\n  onDelete: id => dispatch(contactsOperations.deleteContact(id)),\n});\nexport default connect(null, mapDispatchToProps)(ContactItem);\n","import styles from './ContactList.module.scss';\nimport ContactItem from '../ContactItem';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { contactsSelectors } from '../../redux/contacts';\n\nconst ContactList = ({ contacts }) => (\n  <ul className={styles.contactsList}>\n    {contacts.map(({ id, name, number }) => (\n      <ContactItem key={id} id={id} name={name} number={number} />\n    ))}\n  </ul>\n);\nContactList.propTypes = {\n  contacts: PropTypes.array.isRequired,\n  onDelete: PropTypes.func,\n};\nconst mapStateToProps = state => ({\n  contacts: contactsSelectors.getSortContacts(state),\n});\n\nexport default connect(mapStateToProps)(ContactList);\n","import React, { Component } from 'react';\r\nimport AddContact from '../components/AddContact';\r\nimport { Button } from 'react-bootstrap';\r\nimport Modal from '../components/Modal';\r\nimport Filter from '../components/Filter';\r\nimport ContactList from '../components/ContactList';\r\nimport { connect } from 'react-redux';\r\nimport { contactsOperations } from '../redux/contacts';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport '../styles.scss';\r\n\r\nclass ContactsPage extends Component {\r\n  state = {\r\n    showModal: false,\r\n  };\r\n  openModal = () => {\r\n    this.setState({ showModal: true });\r\n  };\r\n  closeModal = () => {\r\n    this.setState({ showModal: false });\r\n  };\r\n  componentDidMount() {\r\n    this.props.fetchContacts();\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"container-page\">\r\n        <h1 className=\"title\">Контакти</h1>\r\n        <div className=\"contacts\">\r\n          <div className=\"contacts-operations\">\r\n            <Button\r\n              variant=\"secondary\"\r\n              onClick={this.openModal}\r\n              className=\"addBtn\"\r\n            >\r\n              Додати контакт\r\n            </Button>\r\n            {this.state.showModal && (\r\n              <Modal onClose={this.closeModal}>\r\n                <AddContact />\r\n              </Modal>\r\n            )}\r\n            <Filter />\r\n          </div>\r\n          <ContactList className=\"contacts-list\" />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapDispatchToProps = dispatch => ({\r\n  fetchContacts: () => dispatch(contactsOperations.fetchContacts()),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(ContactsPage);\r\n"],"sourceRoot":""}