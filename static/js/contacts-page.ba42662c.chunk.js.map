{"version":3,"sources":["components/ContactForm/ContactForm.module.scss","components/Filter/Filter.module.scss","components/ContactList/ContactList.module.scss","components/ContactItem/ContactItem.module.scss","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.jsx","pages/ContactsPage.js"],"names":["module","exports","INITIAL_STATE","name","number","ContactForm","state","handleChange","e","currentTarget","value","setState","prev","handleSubmit","preventDefault","props","contacts","map","item","toLowerCase","includes","alert","onSubmit","reset","this","className","styles","contactForm","label","input","type","placeholder","pattern","title","required","onChange","addContactBtn","Component","connect","contactsSelectors","getContacts","dispatch","contactsOperations","addContact","getFilter","changeFilter","target","filter","onDelete","id","deleteContact","contactItem","phoneNumber","contactDeleteBtn","onClick","getVisibleContacts","contactsList","ContactsPage","fetchContacts"],"mappings":"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","file":"static/js/contacts-page.ba42662c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactForm\":\"ContactForm_contactForm__1jXwC\",\"label\":\"ContactForm_label__1_9aD\",\"input\":\"ContactForm_input__2vrgd\",\"addContactBtn\":\"ContactForm_addContactBtn__1lBji\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__3QK9A\",\"label\":\"Filter_label__1YEKJ\",\"input\":\"Filter_input__35LBw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsList\":\"ContactList_contactsList__n3jNT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"phoneNumber\":\"ContactItem_phoneNumber__3XFla\",\"contactItem\":\"ContactItem_contactItem__3KsoJ\",\"contactDeleteBtn\":\"ContactItem_contactDeleteBtn__3J5yC\",\"ring\":\"ContactItem_ring__1_krW\"};","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './ContactForm.module.scss';\nimport { connect } from 'react-redux';\nimport { contactsOperations } from '../../redux/contacts';\nimport { contactsSelectors } from '../../redux/contacts';\n\nconst INITIAL_STATE = {\n  name: '',\n  number: '',\n};\nclass ContactForm extends Component {\n  static propTypes = {\n    INITIAL_STATE: PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n    onSubmit: PropTypes.func,\n  };\n  state = { ...INITIAL_STATE };\n  handleChange = e => {\n    const { name, value } = e.currentTarget;\n    this.setState(prev => ({\n      ...prev,\n      [name]: value,\n    }));\n  };\n  handleSubmit = e => {\n    const { name } = this.state;\n    e.preventDefault();\n    if (\n      this.props.contacts\n        .map(item => item.name.toLowerCase())\n        .includes(name.toLowerCase())\n    ) {\n      alert(`${name} is already in contacts`);\n      return;\n    }\n    this.props.onSubmit(this.state);\n    this.reset();\n  };\n  reset = () => {\n    this.setState({ ...INITIAL_STATE });\n  };\n  render() {\n    const { name, number } = this.state;\n    return (\n      <form onSubmit={this.handleSubmit} className={styles.contactForm}>\n        <label className={styles.label}>\n          Ім'я\n          <input\n            className={styles.input}\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            placeholder=\"введіть ім'я\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            onChange={this.handleChange}\n          />\n        </label>\n        <label className={styles.label}>\n          Номер телефону\n          <input\n            className={styles.input}\n            type=\"tel\"\n            name=\"number\"\n            placeholder=\"XXX-XX-XX\"\n            value={number}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n            onChange={this.handleChange}\n          />\n        </label>\n        <button type=\"submit\" className={styles.addContactBtn}>\n          Додати контакт\n        </button>\n      </form>\n    );\n  }\n}\nconst mapStateToPrope = state => ({\n  contacts: contactsSelectors.getContacts(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onSubmit: ({ name, number }) =>\n    dispatch(contactsOperations.addContact({ name, number })),\n});\n\nexport default connect(mapStateToPrope, mapDispatchToProps)(ContactForm);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Filter.module.scss';\nimport { connect } from 'react-redux';\nimport { contactsSelectors, changeFilter } from '../../redux/contacts';\n\nconst Filter = ({ value, onChange }) => {\n  return (\n    <div className={styles.filter}>\n      <label className={styles.label}>\n        Пошук контакта за ім'ям\n        <input\n          type=\"text\"\n          className={styles.input}\n          value={value}\n          onChange={onChange}\n        />\n      </label>\n    </div>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\nconst mapStateToProps = state => ({\n  value: contactsSelectors.getFilter(state),\n});\nconst mapDispatchToProps = dispatch => ({\n  onChange: e => dispatch(changeFilter(e.target.value)),\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import PropTypes from 'prop-types';\nimport styles from './ContactItem.module.scss';\nimport { connect } from 'react-redux';\nimport { contactsOperations } from '../../redux/contacts';\n\nconst ContactItem = ({ id, name, number, onDelete }) => (\n  <li name={name} number={number} className={styles.contactItem}>\n    {name}:<span className={styles.phoneNumber}>{number}</span>\n    <button\n      type=\"button\"\n      className={styles.contactDeleteBtn}\n      onClick={() => onDelete(id)}\n    >\n      Delete\n    </button>\n  </li>\n);\nContactItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  onDelete: PropTypes.func,\n};\nconst mapDispatchToProps = dispatch => ({\n  onDelete: id => dispatch(contactsOperations.deleteContact(id)),\n});\nexport default connect(null, mapDispatchToProps)(ContactItem);\n","import styles from './ContactList.module.scss';\nimport ContactItem from '../ContactItem';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { contactsSelectors } from '../../redux/contacts';\n\nconst ContactList = ({ contacts }) => (\n  <ul className={styles.contactsList}>\n    {contacts.map(({ id, name, number }) => (\n      <ContactItem key={id} id={id} name={name} number={number} />\n    ))}\n  </ul>\n);\nContactList.propTypes = {\n  contacts: PropTypes.array.isRequired,\n  onDelete: PropTypes.func,\n};\nconst mapStateToProps = state => ({\n  contacts: contactsSelectors.getVisibleContacts(state),\n});\n\nexport default connect(mapStateToProps)(ContactList);\n","import React, { Component } from 'react';\r\nimport ContactForm from '../components/ContactForm';\r\nimport Filter from '../components/Filter';\r\nimport ContactList from '../components/ContactList';\r\nimport { connect } from 'react-redux';\r\nimport { contactsOperations } from '../redux/contacts';\r\n\r\nimport '../styles.scss';\r\n\r\nclass ContactsPage extends Component {\r\n  componentDidMount() {\r\n    this.props.fetchContacts();\r\n  }\r\n  render() {\r\n    return (\r\n      <>\r\n        <h1 className=\"title\">Додати контакт: </h1>\r\n        <ContactForm />\r\n        <h2 className=\"title\">Контакти</h2>\r\n        <Filter />\r\n        <ContactList />\r\n      </>\r\n    );\r\n  }\r\n}\r\nconst mapDispatchToProps = dispatch => ({\r\n  fetchContacts: () => dispatch(contactsOperations.fetchContacts()),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(ContactsPage);\r\n"],"sourceRoot":""}