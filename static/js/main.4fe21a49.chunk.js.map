{"version":3,"sources":["redux/auth/auth-actions.js","redux/auth/auth-reducer.js","redux/auth/auth-operations.js","redux/auth/auth-selectors.js","components/UserMenu/UserMenu.module.scss","redux/contacts/contacts-actions.js","redux/contacts/contacts-operations.js","redux/contacts/contacts-selectors.js","redux/contacts/contacts-reducer.js","components/AppBar/AppBar.module.scss","components/Container/Container.module.scss","routes.js","components/Navigation.js","components/UserMenu/UserMenu.js","components/AuthNav/AuthNav.js","components/AppBar/AppBar.js","components/Container/Container.js","App.js","redux/store.js","index.js"],"names":["registerRequest","createAction","registerSuccess","registerError","loginRequest","loginSuccess","loginError","logoutRequest","logoutSuccess","logoutError","getCurrentUserRequest","getCurrentUserSuccess","getCurrentUserError","initialUserState","name","email","user","createReducer","authActions","_","payload","token","setError","error","combineReducers","axios","defaults","baseURL","headers","common","Authorization","register","credentials","dispatch","a","post","response","data","message","logIn","logOut","getCurrentUser","getState","persistedToken","auth","get","getIsAuthenticated","state","Boolean","getUserEmail","module","exports","fetchContactRequest","fetchContactSuccess","fetchContactError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","fetchContacts","addContact","number","contact","deleteContact","contactId","delete","getFilter","contacts","filter","getContacts","items","getVisibleContacts","createSelector","normalizedFilter","toLowerCase","includes","itemsReducer","id","filterReducer","contactsReducer","routes","home","login","Navigation","className","activeClassName","exact","to","mapDispatchToProps","onLogout","authOperations","connect","authSelectors","class","styles","type","btn","onClick","AuthNav","props","isAuthenticated","header","Container","children","container","HomePage","lazy","ContactsPage","LoginPage","RegisterPage","App","this","onGetCurretnUser","fallback","path","component","Component","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","persistReducer","authReducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.4fe21a49.chunk.js","sourcesContent":["import { createAction } from '@reduxjs/toolkit';\r\n\r\nconst registerRequest = createAction('auth/registerRequest');\r\nconst registerSuccess = createAction('auth/registerSuccess');\r\nconst registerError = createAction('auth/registerError');\r\n\r\nconst loginRequest = createAction('auth/loginRequest');\r\nconst loginSuccess = createAction('auth/loginSuccess');\r\nconst loginError = createAction('auth/loginError');\r\n\r\nconst logoutRequest = createAction('auth/logoutRequest');\r\nconst logoutSuccess = createAction('auth/logoutSuccess');\r\nconst logoutError = createAction('auth/logoutError');\r\n\r\nconst getCurrentUserRequest = createAction('auth/getCurrentUserRequest');\r\nconst getCurrentUserSuccess = createAction('auth/getCurrentUserSuccess');\r\nconst getCurrentUserError = createAction('auth/getCurrentUserError');\r\n\r\nexport default {\r\n  registerRequest,\r\n  registerSuccess,\r\n  registerError,\r\n  logoutRequest,\r\n  logoutSuccess,\r\n  logoutError,\r\n  loginRequest,\r\n  loginSuccess,\r\n  loginError,\r\n  getCurrentUserRequest,\r\n  getCurrentUserSuccess,\r\n  getCurrentUserError,\r\n};\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport authActions from './auth-actions';\r\n\r\nconst initialUserState = { name: null, email: null };\r\n\r\nconst user = createReducer(initialUserState, {\r\n  [authActions.registerSuccess]: (_, { payload }) => payload.user,\r\n  [authActions.loginSuccess]: (_, { payload }) => payload.user,\r\n  [authActions.logoutSuccess]: () => initialUserState,\r\n  [authActions.getCurrentUserSuccess]: (_, { payload }) => payload,\r\n});\r\n\r\nconst token = createReducer(null, {\r\n  [authActions.registerSuccess]: (_, { payload }) => payload.token,\r\n  [authActions.loginSuccess]: (_, { payload }) => payload.token,\r\n  [authActions.logoutSuccess]: () => null,\r\n});\r\n\r\nconst setError = (_, { payload }) => payload;\r\n\r\nconst error = createReducer(null, {\r\n  [authActions.registerError]: setError,\r\n  [authActions.loginError]: setError,\r\n  [authActions.logoutError]: setError,\r\n  [authActions.getCurrentUserError]: setError,\r\n});\r\n\r\nexport default combineReducers({\r\n  user,\r\n  token,\r\n  error,\r\n});\r\n","import axios from 'axios';\r\n\r\nimport authActions from './auth-actions';\r\n\r\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\r\n\r\nconst token = {\r\n  set(token) {\r\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n  },\r\n  unset() {\r\n    axios.defaults.headers.common.Authorization = '';\r\n  },\r\n};\r\n\r\nconst register = credentials => async dispatch => {\r\n  dispatch(authActions.registerRequest());\r\n\r\n  try {\r\n    const response = await axios.post('/users/signup', credentials);\r\n    token.set(response.data.token);\r\n    dispatch(authActions.registerSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(authActions.registerError(error.message));\r\n  }\r\n};\r\n\r\nconst logIn = credentials => async dispatch => {\r\n  dispatch(authActions.loginRequest());\r\n\r\n  try {\r\n    const response = await axios.post('/users/login', credentials);\r\n    token.set(response.data.token);\r\n    dispatch(authActions.loginSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(authActions.loginError(error.message));\r\n  }\r\n};\r\n\r\nconst logOut = () => async dispatch => {\r\n  dispatch(authActions.logoutRequest());\r\n\r\n  try {\r\n    await axios.post('/users/logout');\r\n    token.unset();\r\n    dispatch(authActions.logoutSuccess());\r\n  } catch (error) {\r\n    dispatch(authActions.logoutError(error.message));\r\n  }\r\n};\r\n\r\nconst getCurrentUser = () => async (dispatch, getState) => {\r\n  const {\r\n    auth: { token: persistedToken },\r\n  } = getState();\r\n\r\n  if (!persistedToken) {\r\n    return;\r\n  }\r\n\r\n  token.set(persistedToken);\r\n  dispatch(authActions.getCurrentUserRequest());\r\n\r\n  try {\r\n    const response = await axios.get('/users/current');\r\n\r\n    dispatch(authActions.getCurrentUserSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(authActions.getCurrentUserError(error.message));\r\n  }\r\n};\r\nexport default { register, logIn, logOut, getCurrentUser };\r\n","const getUserEmail = state => state.auth.user.email;\r\nconst getIsAuthenticated = state => Boolean(state.auth.token);\r\n\r\nexport default {\r\n  getIsAuthenticated,\r\n  getUserEmail,\r\n};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"email\":\"UserMenu_email__2lcZk\",\"btn\":\"UserMenu_btn__1uY27\"};","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const fetchContactRequest = createAction('contacts/fetchContactRequest');\r\nexport const fetchContactSuccess = createAction('contacts/fetchContactSuccess');\r\nexport const fetchContactError = createAction('contacts/fetchContactError');\r\nexport const addContactRequest = createAction('contacts/addContactRequest');\r\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\r\nexport const addContactError = createAction('contacts/addContactError');\r\nexport const deleteContactRequest = createAction(\r\n  'contacts/deleteContactRequest',\r\n);\r\nexport const deleteContactSuccess = createAction(\r\n  'contacts/deleteContactSuccess',\r\n);\r\nexport const deleteContactError = createAction('contacts/deleteContactError');\r\n\r\nexport const changeFilter = createAction('contacts/filter');\r\n","import axios from 'axios';\r\n\r\nimport {\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  fetchContactRequest,\r\n  fetchContactError,\r\n  fetchContactSuccess,\r\n} from './contacts-actions';\r\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\r\n\r\nconst fetchContacts = () => async dispatch => {\r\n  dispatch(fetchContactRequest());\r\n  try {\r\n    const { data } = await axios.get('/contacts');\r\n    dispatch(fetchContactSuccess(data));\r\n  } catch (error) {\r\n    dispatch(fetchContactError(error));\r\n  }\r\n};\r\nconst addContact =\r\n  ({ name, number }) =>\r\n  async dispatch => {\r\n    const contact = { name, number };\r\n    dispatch(addContactRequest());\r\n    try {\r\n      const { data } = await axios.post('/contacts', contact);\r\n      dispatch(addContactSuccess(data));\r\n    } catch (error) {\r\n      dispatch(addContactError(error));\r\n    }\r\n  };\r\nconst deleteContact = contactId => async dispatch => {\r\n  dispatch(deleteContactRequest());\r\n  try {\r\n    await axios.delete(`/contacts/${contactId}`);\r\n    dispatch(deleteContactSuccess(contactId));\r\n  } catch (error) {\r\n    dispatch(deleteContactError(error));\r\n  }\r\n};\r\nexport default { fetchContacts, addContact, deleteContact };\r\n","import { createSelector } from '@reduxjs/toolkit';\r\n\r\nconst getFilter = state => state.contacts.filter;\r\nconst getContacts = state => state.contacts.items;\r\n\r\nconst getVisibleContacts = createSelector(\r\n  [getContacts, getFilter],\r\n  (contacts, filter) => {\r\n    const normalizedFilter = filter.toLowerCase();\r\n    return contacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(normalizedFilter),\r\n    );\r\n  },\r\n);\r\n\r\nexport default { getFilter, getContacts, getVisibleContacts };\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport {\r\n  addContactSuccess,\r\n  deleteContactSuccess,\r\n  changeFilter,\r\n  fetchContactSuccess,\r\n} from './contacts-actions';\r\n\r\nconst itemsReducer = createReducer([], {\r\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\r\n  [deleteContactSuccess]: (state, { payload }) =>\r\n    state.filter(contact => contact.id !== payload),\r\n  [fetchContactSuccess]: (_, { payload }) => payload,\r\n});\r\n\r\nconst filterReducer = createReducer('', {\r\n  [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nconst contactsReducer = combineReducers({\r\n  items: itemsReducer,\r\n  filter: filterReducer,\r\n});\r\n\r\nexport default contactsReducer;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"AppBar_header__2F-LS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3Snq1\"};","const routes = {\r\n  home: '/',\r\n  register: '/register',\r\n  login: '/login',\r\n  contacts: '/contacts',\r\n};\r\n\r\nexport default routes;\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport routes from '../routes';\r\nimport '../styles.scss';\r\n\r\nconst Navigation = () => {\r\n  return (\r\n    <nav>\r\n      <NavLink\r\n        className=\"header__link\"\r\n        activeClassName=\"header__link-active\"\r\n        exact\r\n        to={routes.home}\r\n      >\r\n        Головна\r\n      </NavLink>\r\n      <NavLink\r\n        className=\"header__link\"\r\n        activeClassName=\"header__link-active\"\r\n        to={routes.contacts}\r\n      >\r\n        Контакти\r\n      </NavLink>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './UserMenu.module.scss';\r\nimport { connect } from 'react-redux';\r\nimport { authSelectors, authOperations } from '../../redux/auth';\r\n\r\nconst UserMenu = ({ email, onLogout }) => {\r\n  return (\r\n    <div>\r\n      <span class={styles.email}>{email}</span>\r\n      <button type=\"button\" class={styles.btn} onClick={onLogout}>\r\n        Вийти\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\nconst mapStateToProps = state => ({\r\n  email: authSelectors.getUserEmail(state),\r\n});\r\n\r\nUserMenu.propTypes = {\r\n  email: PropTypes.string.isRequired,\r\n  onLogout: PropTypes.func,\r\n};\r\nconst mapDispatchToProps = {\r\n  onLogout: authOperations.logOut,\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserMenu);\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport routes from '../../routes';\r\nimport '../../styles.scss';\r\n\r\nconst AuthNav = props => {\r\n  return (\r\n    <nav>\r\n      <NavLink\r\n        className=\"header__link\"\r\n        activeClassName=\"header__link-active\"\r\n        exact\r\n        to={routes.register}\r\n      >\r\n        Реєстрація\r\n      </NavLink>\r\n      <NavLink\r\n        className=\"header__link\"\r\n        activeClassName=\"header__link-active\"\r\n        to={routes.login}\r\n      >\r\n        Вхід\r\n      </NavLink>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default AuthNav;\r\n","import React from 'react';\r\nimport Navigation from '../Navigation';\r\nimport UserMenu from '../UserMenu';\r\nimport AuthNav from '../AuthNav';\r\nimport styles from './AppBar.module.scss';\r\nimport { connect } from 'react-redux';\r\nimport { authSelectors } from '../../redux/auth';\r\n\r\nconst AppBar = ({ isAuthenticated }) => {\r\n  return (\r\n    <header className={styles.header}>\r\n      <Navigation />\r\n      {isAuthenticated ? <UserMenu /> : <AuthNav />}\r\n    </header>\r\n  );\r\n};\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(AppBar);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Container.module.scss';\r\n\r\nconst Container = ({ children }) => {\r\n  return <div className={styles.container}>{children}</div>;\r\n};\r\n\r\nContainer.propTypes = {\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default Container;\r\n","import React, { Component, lazy, Suspense } from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport AppBar from './components/AppBar';\nimport Container from './components/Container';\nimport routes from './routes';\nimport { authOperations } from './redux/auth';\nimport { connect } from 'react-redux';\n\nconst HomePage = lazy(() =>\n  import('./pages/HomePage' /* webpackChunkName: \"home-page\" */),\n);\nconst ContactsPage = lazy(() =>\n  import('./pages/ContactsPage' /* webpackChunkName: \"contacts-page\" */),\n);\nconst LoginPage = lazy(() =>\n  import('./pages/LoginPage' /* webpackChunkName: \"login-page\" */),\n);\nconst RegisterPage = lazy(() =>\n  import('./pages/RegisterPage' /* webpackChunkName: \"register-page\" */),\n);\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.onGetCurretnUser();\n  }\n  render() {\n    return (\n      <>\n        <Container>\n          <AppBar />\n          <Suspense fallback={<h1>Завантаження...</h1>}>\n            <Switch>\n              <Route exact path={routes.home} component={HomePage} />\n              <Route path={routes.contacts} component={ContactsPage} />\n              <Route path={routes.login} component={LoginPage} />\n              <Route path={routes.register} component={RegisterPage} />\n              <Redirect to={routes.home} />\n            </Switch>\n          </Suspense>\n        </Container>\n      </>\n    );\n  }\n}\nconst mapDispatchToProps = {\n  onGetCurretnUser: authOperations.getCurrentUser,\n};\n\nexport default connect(null, mapDispatchToProps)(App);\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport { contactsReducer } from './contacts';\r\nimport logger from 'redux-logger';\r\nimport { authReducer } from './auth';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  // logger,\r\n];\r\nconst authPersistConfig = {\r\n  key: 'auth',\r\n  storage,\r\n  whitelist: ['token'],\r\n};\r\nconst store = configureStore({\r\n  reducer: {\r\n    auth: persistReducer(authPersistConfig, authReducer),\r\n    contacts: contactsReducer,\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\nconst persistor = persistStore(store);\r\n\r\nexport default { store, persistor };\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport App from './App';\nimport store from './redux/store';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}