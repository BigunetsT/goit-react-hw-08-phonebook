{"version":3,"sources":["components/UserMenu/UserMenu.module.scss","redux/contacts/contacts-actions.js","redux/contacts/contacts-operations.js","redux/contacts/contacts-selectors.js","redux/contacts/contacts-reducer.js","components/AppBar/AppBar.module.scss","routes.js","components/Navigation.js","components/UserMenu/UserMenu.js","components/AuthNav/AuthNav.js","components/AppBar/AppBar.js","components/PrivateRoute.js","components/PublicRoute.js","App.js","redux/store.js","index.js","redux/auth/auth-actions.js","redux/auth/auth-reducer.js","redux/auth/auth-operations.js","redux/auth/auth-selectors.js"],"names":["module","exports","fetchContactRequest","createAction","fetchContactSuccess","fetchContactError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","updateContactRequest","updateContactSuccess","updateContactError","changeFilter","axios","defaults","baseURL","fetchContacts","dispatch","a","get","data","addContact","name","number","contact","post","deleteContact","contactId","delete","updateContact","id","update","patch","getFilter","state","contacts","filter","getContacts","items","getVisibleContacts","createSelector","normalizedFilter","toLowerCase","includes","getSortContacts","sort","b","getContactsCount","length","itemsReducer","createReducer","payload","_","map","filterReducer","contactsReducer","combineReducers","routes","home","register","login","connect","isAuthenticated","authSelectors","getIsAuthenticated","className","activeClassName","exact","to","mapDispatchToProps","onLogout","authOperations","logOut","email","getUserEmail","styles","type","btn","onClick","img","height","viewBox","width","xmlns","d","AuthNav","props","header","Component","component","redirectTo","routeProps","render","restricted","HomePage","lazy","ContactsPage","LoginPage","RegisterPage","App","this","onGetCurretnUser","fallback","path","getCurrentUser","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","auth","persistReducer","authReducer","devTools","process","persistor","persistStore","ReactDOM","StrictMode","loading","document","getElementById","registerRequest","registerSuccess","registerError","loginRequest","loginSuccess","loginError","logoutRequest","logoutSuccess","logoutError","getCurrentUserRequest","getCurrentUserSuccess","getCurrentUserError","initialUserState","user","authActions","token","setError","error","headers","common","Authorization","credentials","response","message","logIn","getState","persistedToken"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,MAAQ,wBAAwB,IAAM,sBAAsB,IAAM,wB,4NCCvEC,EAAsBC,YAAa,gCACnCC,EAAsBD,YAAa,gCACnCE,EAAoBF,YAAa,8BACjCG,EAAoBH,YAAa,8BACjCI,EAAoBJ,YAAa,8BACjCK,EAAkBL,YAAa,4BAC/BM,EAAuBN,YAClC,iCAEWO,EAAuBP,YAClC,iCAEWQ,EAAqBR,YAAa,+BAClCS,EAAuBT,YAClC,iCAEWU,EAAuBV,YAClC,iCAEWW,EAAqBX,YAAa,+BAElCY,EAAeZ,YAAa,mBCPzCa,IAAMC,SAASC,QAAU,wCAEzB,I,EA4Ce,GAAEC,cA5CK,yDAAM,WAAMC,GAAN,iBAAAC,EAAA,6DAC1BD,EAASlB,KADiB,kBAGDc,IAAMM,IAAI,aAHT,gBAGhBC,EAHgB,EAGhBA,KACRH,EAAShB,EAAoBmB,IAJL,gDAMxBH,EAASf,EAAkB,EAAD,KANF,yDAAN,uDA4CUmB,WAlC9B,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,OAAT,8CACA,WAAMN,GAAN,mBAAAC,EAAA,6DACQM,EAAU,CAAEF,OAAMC,UACxBN,EAASd,KAFX,kBAI2BU,IAAMY,KAAK,YAAaD,GAJnD,gBAIYJ,EAJZ,EAIYA,KACRH,EAASb,EAAkBgB,IAL/B,kDAOIH,EAASZ,EAAgB,EAAD,KAP5B,0DADA,uDAkC0CqB,cAvBtB,SAAAC,GAAS,8CAAI,WAAMV,GAAN,SAAAC,EAAA,6DACjCD,EAASX,KADwB,kBAGzBO,IAAMe,OAAN,oBAA0BD,IAHD,OAI/BV,EAASV,EAAqBoB,IAJC,gDAM/BV,EAAST,EAAmB,EAAD,KANI,yDAAJ,uDAuB4BqB,cAZzD,SAAC,GAAD,IAAGC,EAAH,EAAGA,GAAIR,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OAAb,8CACA,WAAMN,GAAN,mBAAAC,EAAA,6DACQa,EAAS,CAAET,OAAMC,UACvBN,EAASR,KAFX,kBAI2BI,IAAMmB,MAAN,oBAAyBF,GAAMC,GAJ1D,gBAIYX,EAJZ,EAIYA,KACRH,EAASP,EAAqBU,IALlC,kDAOIH,EAASN,EAAmB,EAAD,KAP/B,0DADA,wD,QChDIsB,EAAY,SAAAC,GAAK,OAAIA,EAAMC,SAASC,QACpCC,EAAc,SAAAH,GAAK,OAAIA,EAAMC,SAASG,OAGtCC,EAAqBC,YACzB,CAACH,EAAaJ,IACd,SAACE,EAAUC,GACT,IAAMK,EAAmBL,EAAOM,cAChC,OAAOP,EAASC,QAAO,SAAAZ,GAAO,OAC5BA,EAAQF,KAAKoB,cAAcC,SAASF,SAQ3B,GACbR,YACAI,cACAE,qBACAK,gBARsBJ,YAAe,CAACD,IAAqB,SAAAJ,GAC3D,OAAOA,EAASU,MAAK,SAAC3B,EAAG4B,GAAJ,OAAW5B,EAAEI,KAAOwB,EAAExB,KAAO,GAAK,QAQvDyB,iBApBuB,SAAAb,GAAK,OAAIA,EAAMC,SAASG,MAAMU,S,8BCMjDC,EAAeC,YAAc,IAAD,mBAC/B9C,GAAoB,SAAC8B,EAAD,OAAUiB,EAAV,EAAUA,QAAV,4BAA4BjB,GAA5B,CAAmCiB,OADxB,cAE/B5C,GAAuB,SAAC2B,EAAD,OAAUiB,EAAV,EAAUA,QAAV,OACtBjB,EAAME,QAAO,SAAAZ,GAAO,OAAIA,EAAQM,KAAOqB,QAHT,cAI/BlD,GAAsB,SAACmD,EAAD,YAAMD,WAJG,cAK/BzC,GAAuB,SAACwB,EAAD,OAAUiB,EAAV,EAAUA,QAAV,OACtBjB,EAAMmB,KAAI,SAAA7B,GAAO,OACfA,EAAQM,KAAOqB,EAAQrB,GAAvB,2BACSN,GADT,IACkBF,KAAM6B,EAAQ7B,KAAMC,OAAQ4B,EAAQ5B,SAClDC,QATwB,IAa5B8B,EAAgBJ,YAAc,GAAD,eAChCtC,GAAe,SAACwC,EAAD,YAAMD,YAQTI,EALSC,YAAgB,CACtClB,MAAOW,EACPb,OAAQkB,K,wCC5BVzD,EAAOC,QAAU,CAAC,OAAS,yB,2ICMZ2D,EAPA,CACbC,KAAM,IACNC,SAAU,YACVC,MAAO,SACPzB,SAAU,a,sBCiCG0B,eANS,SAAA3B,GAAK,MAAK,CAChC4B,gBAAiBC,IAAcC,mBAAmB9B,MAKrC2B,EA7BI,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,gBACpB,OACE,gCACE,cAAC,IAAD,CACEG,UAAU,eACVC,gBAAgB,sBAChBC,OAAK,EACLC,GAAIX,EAAOC,KAJb,wDAQCI,GACC,cAAC,IAAD,CACEG,UAAU,eACVC,gBAAgB,sBAChBE,GAAIX,EAAOtB,SAHb,oE,iBCiBFkC,EAAqB,CACzBC,SAAUC,IAAeC,QAEZX,eAXS,SAAA3B,GAAK,MAAK,CAChCuC,MAAOV,IAAcW,aAAaxC,MAUImC,EAAzBR,EAlCE,SAAC,GAAyB,IAAvBY,EAAsB,EAAtBA,MAAOH,EAAe,EAAfA,SACzB,OACE,gCACE,sBAAML,UAAWU,IAAOF,MAAxB,SAAgCA,IAChC,yBAAQG,KAAK,SAASX,UAAWU,IAAOE,IAAKC,QAASR,EAAtD,2CAEE,sBACEL,UAAWU,IAAOI,IAClBC,OAAO,KACPC,QAAQ,kBACRC,MAAM,KACNC,MAAM,6BALR,UAOE,sBAAMC,EAAE,qKACR,sBAAMA,EAAE,2VACR,sBAAMA,EAAE,+uBACR,sBAAMA,EAAE,gSACR,sBAAMA,EAAE,yRCIHC,EAtBC,SAAAC,GACd,OACE,gCACE,cAAC,IAAD,CACErB,UAAU,eACVC,gBAAgB,sBAChBC,OAAK,EACLC,GAAIX,EAAOE,SAJb,0EAQA,cAAC,IAAD,CACEM,UAAU,eACVC,gBAAgB,sBAChBE,GAAIX,EAAOG,MAHb,0C,iBCISC,eAJS,SAAA3B,GAAK,MAAK,CAChC4B,gBAAiBC,IAAcC,mBAAmB9B,MAGrC2B,EAZA,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,gBAChB,OACE,yBAAQG,UAAWU,IAAOY,OAA1B,UACE,cAAC,EAAD,IACCzB,EAAkB,cAAC,EAAD,IAAe,cAAC,EAAD,U,gBCgBzBD,eAHS,SAAA3B,GAAK,MAAK,CAChC4B,gBAAiBC,IAAcC,mBAAmB9B,MAErC2B,EAtBM,SAAC,GAAD,IACR2B,EADQ,EACnBC,UACA3B,EAFmB,EAEnBA,gBACA4B,EAHmB,EAGnBA,WACGC,EAJgB,mEAMnB,cAAC,IAAD,2BACMA,GADN,IAEEC,OAAQ,SAAAN,GAAK,OACXxB,EAAkB,cAAC0B,EAAD,eAAeF,IAAY,cAAC,IAAD,CAAUlB,GAAIsB,WCiBlD7B,eAHS,SAAA3B,GAAK,MAAK,CAChC4B,gBAAiBC,IAAcC,mBAAmB9B,MAErC2B,EA1BK,SAAC,GAAD,IACP2B,EADO,EAClBC,UACA3B,EAFkB,EAElBA,gBACA4B,EAHkB,EAGlBA,WACGC,EAJe,mEAMlB,cAAC,IAAD,2BACMA,GADN,IAEEC,OAAQ,SAAAN,GAAK,OACXxB,GAAmB6B,EAAWE,WAC5B,cAAC,IAAD,CAAUzB,GAAIsB,IAEd,cAACF,EAAD,eAAeF,WCTjBQ,EAAWC,gBAAK,kBACpB,gCAEIC,EAAeD,gBAAK,kBACxB,sDAEIE,EAAYF,gBAAK,kBACrB,gCAEIG,EAAeH,gBAAK,kBACxB,gCAGII,E,uKACJ,WACEC,KAAKd,MAAMe,qB,oBAEb,WACE,OACE,qCACE,cAAC,EAAD,IACA,cAAC,WAAD,CAAUC,SAAU,6GAApB,SACE,eAAC,IAAD,WACE,cAAC,EAAD,CAAanC,OAAK,EAACoC,KAAM9C,EAAOC,KAAM+B,UAAWK,IACjD,cAAC,EAAD,CACES,KAAM9C,EAAOG,MACbiC,YAAU,EACVH,WAAYjC,EAAOtB,SACnBsD,UAAWQ,IAEb,cAAC,EAAD,CACEM,KAAM9C,EAAOE,SACbkC,YAAU,EACVH,WAAYjC,EAAOtB,SACnBsD,UAAWS,IAEb,cAAC,EAAD,CACEK,KAAM9C,EAAOtB,SACbuD,WAAYjC,EAAOG,MACnB6B,UAAWO,gB,GA1BPR,aAkCZnB,EAAqB,CACzBgC,iBAAkB9B,IAAeiC,gBAGpB3C,cAAQ,KAAMQ,EAAdR,CAAkCsC,G,iEC5C3CM,EAAU,sBACXC,YAAqB,CACtBC,kBAAmB,CACjBC,eAAgB,CAACC,IAAOC,IAAWC,IAAOC,IAASC,IAAOC,SAHhD,CAMdC,MAEIC,EAAoB,CACxBC,IAAK,OACLC,YACAC,UAAW,CAAC,UAERC,EAAQC,YAAe,CAC3BC,QAAS,CACPC,KAAMC,YAAeR,EAAmBS,KACxC1F,SAAUoB,KAEZkD,aACAqB,UAAUC,IAIG,GAAEP,QAAOQ,UAFNC,YAAaT,I,MC5B/BU,IAAStC,OACP,cAAC,IAAMuC,WAAP,UACE,cAAC,IAAD,CAAUX,MAAOA,EAAMA,MAAvB,SACE,cAAC,IAAD,CAAaY,QAAS,KAAMJ,UAAWR,EAAMQ,UAA7C,SACE,cAAC,IAAD,UACE,cAAC,EAAD,YAKRK,SAASC,eAAe,U,wJCjBpBC,EAAkBvI,YAAa,wBAC/BwI,EAAkBxI,YAAa,wBAC/ByI,EAAgBzI,YAAa,sBAE7B0I,EAAe1I,YAAa,qBAC5B2I,EAAe3I,YAAa,qBAC5B4I,EAAa5I,YAAa,mBAUjB,GACbuI,kBACAC,kBACAC,gBACAI,cAZoB7I,YAAa,sBAajC8I,cAZoB9I,YAAa,sBAajC+I,YAZkB/I,YAAa,oBAa/B0I,eACAC,eACAC,aACAI,sBAd4BhJ,YAAa,8BAezCiJ,sBAd4BjJ,YAAa,8BAezCkJ,oBAd0BlJ,YAAa,6B,cCZnCmJ,EAAmB,CAAE7H,KAAM,KAAMmD,MAAO,MAExC2E,EAAOlG,YAAciG,GAAD,mBACvBE,EAAYb,iBAAkB,SAACpF,EAAD,YAAMD,QAAsBiG,QADnC,cAEvBC,EAAYV,cAAe,SAACvF,EAAD,YAAMD,QAAsBiG,QAFhC,cAGvBC,EAAYP,eAAgB,kBAAMK,KAHX,cAIvBE,EAAYJ,uBAAwB,SAAC7F,EAAD,YAAMD,WAJnB,IAOpBmG,EAAQpG,YAAc,MAAD,mBACxBmG,EAAYb,iBAAkB,SAACpF,EAAD,YAAMD,QAAsBmG,SADlC,cAExBD,EAAYV,cAAe,SAACvF,EAAD,YAAMD,QAAsBmG,SAF/B,cAGxBD,EAAYP,eAAgB,kBAAM,QAHV,IAMrBS,EAAW,SAACnG,EAAD,YAAMD,SAEjBqG,EAAQtG,YAAc,MAAD,mBACxBmG,EAAYZ,cAAgBc,GADJ,cAExBF,EAAYT,WAAaW,GAFD,cAGxBF,EAAYN,YAAcQ,GAHF,cAIxBF,EAAYH,oBAAsBK,GAJV,IAOrBzF,EAAkBZ,aAAc,GAAD,mBAClCmG,EAAYb,iBAAkB,kBAAM,KADF,cAElCa,EAAYV,cAAe,kBAAM,KAFC,cAGlCU,EAAYJ,uBAAwB,kBAAM,KAHR,cAIlCI,EAAYZ,eAAgB,kBAAM,KAJA,cAKlCY,EAAYT,YAAa,kBAAM,KALG,cAMlCS,EAAYH,qBAAsB,kBAAM,KANN,cAOlCG,EAAYP,eAAgB,kBAAM,KAPA,IAStBtF,cAAgB,CAC7B4F,OACAtF,kBACAwF,QACAE,U,yCCtCF3I,IAAMC,SAASC,QAAU,wCAEzB,IAAMuI,EAAQ,SACRA,GACFzI,IAAMC,SAAS2I,QAAQC,OAAOC,cAA9B,iBAAwDL,IAFtDA,EAAQ,WAKVzI,IAAMC,SAAS2I,QAAQC,OAAOC,cAAgB,IAwDnC,GAAEhG,SApDA,SAAAiG,GAAW,8CAAI,WAAM3I,GAAN,eAAAC,EAAA,6DAC9BD,EAASoI,EAAYd,mBADS,kBAIL1H,IAAMY,KAAK,gBAAiBmI,GAJvB,OAItBC,EAJsB,OAK5BP,EAAUO,EAASzI,KAAKkI,OACxBrI,EAASoI,EAAYb,gBAAgBqB,EAASzI,OANlB,gDAQ5BH,EAASoI,EAAYZ,cAAc,KAAMqB,UARb,yDAAJ,uDAoDDC,MAxCb,SAAAH,GAAW,8CAAI,WAAM3I,GAAN,eAAAC,EAAA,6DAC3BD,EAASoI,EAAYX,gBADM,kBAIF7H,IAAMY,KAAK,eAAgBmI,GAJzB,OAInBC,EAJmB,OAKzBP,EAAUO,EAASzI,KAAKkI,OACxBrI,EAASoI,EAAYV,aAAakB,EAASzI,OANlB,gDAQzBH,EAASoI,EAAYT,WAAW,KAAMkB,UARb,yDAAJ,uDAwCStF,OA5BnB,yDAAM,WAAMvD,GAAN,SAAAC,EAAA,6DACnBD,EAASoI,EAAYR,iBADF,kBAIXhI,IAAMY,KAAK,iBAJA,OAKjB6H,IACArI,EAASoI,EAAYP,iBANJ,gDAQjB7H,EAASoI,EAAYN,YAAY,KAAMe,UARtB,yDAAN,uDA4B2BtD,eAhBnB,yDAAM,WAAOvF,EAAU+I,GAAjB,mBAAA9I,EAAA,2DAGvB8I,IADaC,EAFU,EAEzBtC,KAAQ2B,MAFiB,wDAO3BA,EAAUW,GACVhJ,EAASoI,EAAYL,yBARM,kBAUFnI,IAAMM,IAAI,kBAVR,OAUnB0I,EAVmB,OAWzB5I,EAASoI,EAAYJ,sBAAsBY,EAASzI,OAX3B,kDAazBH,EAASoI,EAAYH,oBAAoB,KAAMY,UAbtB,0DAAN,0DC/CR,GACb9F,mBAHyB,SAAA9B,GAAK,OAAIA,EAAMyF,KAAK7D,iBAI7CY,aALmB,SAAAxC,GAAK,OAAIA,EAAMyF,KAAKyB,KAAK3E,U","file":"static/js/main.74814c1a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"email\":\"UserMenu_email__2lcZk\",\"btn\":\"UserMenu_btn__1uY27\",\"img\":\"UserMenu_img__Qy0N4\"};","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const fetchContactRequest = createAction('contacts/fetchContactRequest');\r\nexport const fetchContactSuccess = createAction('contacts/fetchContactSuccess');\r\nexport const fetchContactError = createAction('contacts/fetchContactError');\r\nexport const addContactRequest = createAction('contacts/addContactRequest');\r\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\r\nexport const addContactError = createAction('contacts/addContactError');\r\nexport const deleteContactRequest = createAction(\r\n  'contacts/deleteContactRequest',\r\n);\r\nexport const deleteContactSuccess = createAction(\r\n  'contacts/deleteContactSuccess',\r\n);\r\nexport const deleteContactError = createAction('contacts/deleteContactError');\r\nexport const updateContactRequest = createAction(\r\n  'contacts/updateContactRequest',\r\n);\r\nexport const updateContactSuccess = createAction(\r\n  'contacts/updateContactSuccess',\r\n);\r\nexport const updateContactError = createAction('contacts/updateContactError');\r\n\r\nexport const changeFilter = createAction('contacts/filter');\r\n","import axios from 'axios';\r\n\r\nimport {\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  fetchContactRequest,\r\n  fetchContactError,\r\n  fetchContactSuccess,\r\n  updateContactRequest,\r\n  updateContactSuccess,\r\n  updateContactError,\r\n} from './contacts-actions';\r\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\r\n\r\nconst fetchContacts = () => async dispatch => {\r\n  dispatch(fetchContactRequest());\r\n  try {\r\n    const { data } = await axios.get('/contacts');\r\n    dispatch(fetchContactSuccess(data));\r\n  } catch (error) {\r\n    dispatch(fetchContactError(error));\r\n  }\r\n};\r\nconst addContact =\r\n  ({ name, number }) =>\r\n  async dispatch => {\r\n    const contact = { name, number };\r\n    dispatch(addContactRequest());\r\n    try {\r\n      const { data } = await axios.post('/contacts', contact);\r\n      dispatch(addContactSuccess(data));\r\n    } catch (error) {\r\n      dispatch(addContactError(error));\r\n    }\r\n  };\r\nconst deleteContact = contactId => async dispatch => {\r\n  dispatch(deleteContactRequest());\r\n  try {\r\n    await axios.delete(`/contacts/${contactId}`);\r\n    dispatch(deleteContactSuccess(contactId));\r\n  } catch (error) {\r\n    dispatch(deleteContactError(error));\r\n  }\r\n};\r\n\r\nconst updateContact =\r\n  ({ id, name, number }) =>\r\n  async dispatch => {\r\n    const update = { name, number };\r\n    dispatch(updateContactRequest());\r\n    try {\r\n      const { data } = await axios.patch(`/contacts/${id}`, update);\r\n      dispatch(updateContactSuccess(data));\r\n    } catch (error) {\r\n      dispatch(updateContactError(error));\r\n    }\r\n  };\r\n\r\nexport default { fetchContacts, addContact, deleteContact, updateContact };\r\n","import { createSelector } from '@reduxjs/toolkit';\r\n\r\nconst getFilter = state => state.contacts.filter;\r\nconst getContacts = state => state.contacts.items;\r\nconst getContactsCount = state => state.contacts.items.length;\r\n\r\nconst getVisibleContacts = createSelector(\r\n  [getContacts, getFilter],\r\n  (contacts, filter) => {\r\n    const normalizedFilter = filter.toLowerCase();\r\n    return contacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(normalizedFilter),\r\n    );\r\n  },\r\n);\r\nconst getSortContacts = createSelector([getVisibleContacts], contacts => {\r\n  return contacts.sort((a, b) => (a.name > b.name ? 1 : -1));\r\n});\r\n\r\nexport default {\r\n  getFilter,\r\n  getContacts,\r\n  getVisibleContacts,\r\n  getSortContacts,\r\n  getContactsCount,\r\n};\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport {\r\n  addContactSuccess,\r\n  deleteContactSuccess,\r\n  changeFilter,\r\n  updateContactSuccess,\r\n  fetchContactSuccess,\r\n} from './contacts-actions';\r\n\r\nconst itemsReducer = createReducer([], {\r\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\r\n  [deleteContactSuccess]: (state, { payload }) =>\r\n    state.filter(contact => contact.id !== payload),\r\n  [fetchContactSuccess]: (_, { payload }) => payload,\r\n  [updateContactSuccess]: (state, { payload }) =>\r\n    state.map(contact =>\r\n      contact.id === payload.id\r\n        ? { ...contact, name: payload.name, number: payload.number }\r\n        : contact,\r\n    ),\r\n});\r\n\r\nconst filterReducer = createReducer('', {\r\n  [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nconst contactsReducer = combineReducers({\r\n  items: itemsReducer,\r\n  filter: filterReducer,\r\n});\r\n\r\nexport default contactsReducer;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"AppBar_header__2F-LS\"};","const routes = {\r\n  home: '/',\r\n  register: '/register',\r\n  login: '/login',\r\n  contacts: '/contacts',\r\n};\r\n\r\nexport default routes;\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport routes from '../routes';\r\nimport '../styles.scss';\r\nimport { connect } from 'react-redux';\r\nimport { authSelectors } from '../redux/auth';\r\n\r\nconst Navigation = ({ isAuthenticated }) => {\r\n  return (\r\n    <nav>\r\n      <NavLink\r\n        className=\"header__link\"\r\n        activeClassName=\"header__link-active\"\r\n        exact\r\n        to={routes.home}\r\n      >\r\n        Головна\r\n      </NavLink>\r\n      {isAuthenticated && (\r\n        <NavLink\r\n          className=\"header__link\"\r\n          activeClassName=\"header__link-active\"\r\n          to={routes.contacts}\r\n        >\r\n          Контакти\r\n        </NavLink>\r\n      )}\r\n    </nav>\r\n  );\r\n};\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\r\n});\r\nNavigation.propTypes = {\r\n  isAuthenticated: PropTypes.bool,\r\n};\r\nexport default connect(mapStateToProps)(Navigation);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './UserMenu.module.scss';\r\nimport { connect } from 'react-redux';\r\nimport { authSelectors, authOperations } from '../../redux/auth';\r\n\r\nconst UserMenu = ({ email, onLogout }) => {\r\n  return (\r\n    <div>\r\n      <span className={styles.email}>{email}</span>\r\n      <button type=\"button\" className={styles.btn} onClick={onLogout}>\r\n        Вийти\r\n        <svg\r\n          className={styles.img}\r\n          height=\"20\"\r\n          viewBox=\"0 0 512.016 512\"\r\n          width=\"20\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n        >\r\n          <path d=\"m496 240.007812h-202.667969c-8.832031 0-16-7.167968-16-16 0-8.832031 7.167969-16 16-16h202.667969c8.832031 0 16 7.167969 16 16 0 8.832032-7.167969 16-16 16zm0 0\" />\r\n          <path d=\"m416 320.007812c-4.097656 0-8.191406-1.558593-11.308594-4.691406-6.25-6.253906-6.25-16.386718 0-22.636718l68.695313-68.691407-68.695313-68.695312c-6.25-6.25-6.25-16.382813 0-22.632813 6.253906-6.253906 16.386719-6.253906 22.636719 0l80 80c6.25 6.25 6.25 16.382813 0 22.632813l-80 80c-3.136719 3.15625-7.230469 4.714843-11.328125 4.714843zm0 0\" />\r\n          <path d=\"m170.667969 512.007812c-4.566407 0-8.898438-.640624-13.226563-1.984374l-128.386718-42.773438c-17.46875-6.101562-29.054688-22.378906-29.054688-40.574219v-384c0-23.53125 19.136719-42.6679685 42.667969-42.6679685 4.5625 0 8.894531.6406255 13.226562 1.9843755l128.382813 42.773437c17.472656 6.101563 29.054687 22.378906 29.054687 40.574219v384c0 23.53125-19.132812 42.667968-42.664062 42.667968zm-128-480c-5.867188 0-10.667969 4.800782-10.667969 10.667969v384c0 4.542969 3.050781 8.765625 7.402344 10.28125l127.785156 42.582031c.917969.296876 2.113281.46875 3.480469.46875 5.867187 0 10.664062-4.800781 10.664062-10.667968v-384c0-4.542969-3.050781-8.765625-7.402343-10.28125l-127.785157-42.582032c-.917969-.296874-2.113281-.46875-3.476562-.46875zm0 0\" />\r\n          <path d=\"m325.332031 170.675781c-8.832031 0-16-7.167969-16-16v-96c0-14.699219-11.964843-26.667969-26.664062-26.667969h-240c-8.832031 0-16-7.167968-16-16 0-8.832031 7.167969-15.9999995 16-15.9999995h240c32.363281 0 58.664062 26.3046875 58.664062 58.6679685v96c0 8.832031-7.167969 16-16 16zm0 0\" />\r\n          <path d=\"m282.667969 448.007812h-85.335938c-8.832031 0-16-7.167968-16-16 0-8.832031 7.167969-16 16-16h85.335938c14.699219 0 26.664062-11.96875 26.664062-26.667968v-96c0-8.832032 7.167969-16 16-16s16 7.167968 16 16v96c0 32.363281-26.300781 58.667968-58.664062 58.667968zm0 0\" />\r\n        </svg>\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\nconst mapStateToProps = state => ({\r\n  email: authSelectors.getUserEmail(state),\r\n});\r\n\r\nUserMenu.propTypes = {\r\n  email: PropTypes.string,\r\n  onLogout: PropTypes.func,\r\n};\r\nconst mapDispatchToProps = {\r\n  onLogout: authOperations.logOut,\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserMenu);\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport routes from '../../routes';\r\nimport '../../styles.scss';\r\n\r\nconst AuthNav = props => {\r\n  return (\r\n    <nav>\r\n      <NavLink\r\n        className=\"header__link\"\r\n        activeClassName=\"header__link-active\"\r\n        exact\r\n        to={routes.register}\r\n      >\r\n        Реєстрація\r\n      </NavLink>\r\n      <NavLink\r\n        className=\"header__link\"\r\n        activeClassName=\"header__link-active\"\r\n        to={routes.login}\r\n      >\r\n        Вхід\r\n      </NavLink>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default AuthNav;\r\n","import React from 'react';\r\nimport Navigation from '../Navigation';\r\nimport UserMenu from '../UserMenu';\r\nimport AuthNav from '../AuthNav';\r\nimport styles from './AppBar.module.scss';\r\nimport { connect } from 'react-redux';\r\nimport { authSelectors } from '../../redux/auth';\r\n\r\nconst AppBar = ({ isAuthenticated }) => {\r\n  return (\r\n    <header className={styles.header}>\r\n      <Navigation />\r\n      {isAuthenticated ? <UserMenu /> : <AuthNav />}\r\n    </header>\r\n  );\r\n};\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(AppBar);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { authSelectors } from '../redux/auth';\r\n\r\nconst PrivateRoute = ({\r\n  component: Component,\r\n  isAuthenticated,\r\n  redirectTo,\r\n  ...routeProps\r\n}) => (\r\n  <Route\r\n    {...routeProps}\r\n    render={props =>\r\n      isAuthenticated ? <Component {...props} /> : <Redirect to={redirectTo} />\r\n    }\r\n  />\r\n);\r\n\r\nPrivateRoute.propTypes = {\r\n  component: PropTypes.elementType,\r\n  isAuthenticated: PropTypes.bool,\r\n  redirectTo: PropTypes.string,\r\n};\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\r\n});\r\nexport default connect(mapStateToProps)(PrivateRoute);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { authSelectors } from '../redux/auth';\r\n\r\nconst PublicRoute = ({\r\n  component: Component,\r\n  isAuthenticated,\r\n  redirectTo,\r\n  ...routeProps\r\n}) => (\r\n  <Route\r\n    {...routeProps}\r\n    render={props =>\r\n      isAuthenticated && routeProps.restricted ? (\r\n        <Redirect to={redirectTo} />\r\n      ) : (\r\n        <Component {...props} />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nPublicRoute.propTypes = {\r\n  component: PropTypes.elementType,\r\n  isAuthenticated: PropTypes.bool,\r\n  redirectTo: PropTypes.string,\r\n};\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\r\n});\r\nexport default connect(mapStateToProps)(PublicRoute);\r\n","import React, { Component, lazy, Suspense } from 'react';\nimport { Switch } from 'react-router-dom';\nimport AppBar from './components/AppBar';\nimport routes from './routes';\nimport { authOperations } from './redux/auth';\nimport { connect } from 'react-redux';\nimport PrivateRoute from './components/PrivateRoute';\nimport PublicRoute from './components/PublicRoute';\n\nconst HomePage = lazy(() =>\n  import('./pages/HomePage' /* webpackChunkName: \"home-page\" */),\n);\nconst ContactsPage = lazy(() =>\n  import('./pages/ContactsPage' /* webpackChunkName: \"contacts-page\" */),\n);\nconst LoginPage = lazy(() =>\n  import('./pages/LoginPage' /* webpackChunkName: \"login-page\" */),\n);\nconst RegisterPage = lazy(() =>\n  import('./pages/RegisterPage' /* webpackChunkName: \"register-page\" */),\n);\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.onGetCurretnUser();\n  }\n  render() {\n    return (\n      <>\n        <AppBar />\n        <Suspense fallback={<h1>Завантаження...</h1>}>\n          <Switch>\n            <PublicRoute exact path={routes.home} component={HomePage} />\n            <PublicRoute\n              path={routes.login}\n              restricted\n              redirectTo={routes.contacts}\n              component={LoginPage}\n            />\n            <PublicRoute\n              path={routes.register}\n              restricted\n              redirectTo={routes.contacts}\n              component={RegisterPage}\n            />\n            <PrivateRoute\n              path={routes.contacts}\n              redirectTo={routes.login}\n              component={ContactsPage}\n            />\n          </Switch>\n        </Suspense>\n      </>\n    );\n  }\n}\nconst mapDispatchToProps = {\n  onGetCurretnUser: authOperations.getCurrentUser,\n};\n\nexport default connect(null, mapDispatchToProps)(App);\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport { contactsReducer } from './contacts';\r\nimport logger from 'redux-logger';\r\nimport { authReducer } from './auth';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\nconst authPersistConfig = {\r\n  key: 'auth',\r\n  storage,\r\n  whitelist: ['token'],\r\n};\r\nconst store = configureStore({\r\n  reducer: {\r\n    auth: persistReducer(authPersistConfig, authReducer),\r\n    contacts: contactsReducer,\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\nconst persistor = persistStore(store);\r\n\r\nexport default { store, persistor };\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport App from './App';\nimport store from './redux/store';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nconst registerRequest = createAction('auth/registerRequest');\r\nconst registerSuccess = createAction('auth/registerSuccess');\r\nconst registerError = createAction('auth/registerError');\r\n\r\nconst loginRequest = createAction('auth/loginRequest');\r\nconst loginSuccess = createAction('auth/loginSuccess');\r\nconst loginError = createAction('auth/loginError');\r\n\r\nconst logoutRequest = createAction('auth/logoutRequest');\r\nconst logoutSuccess = createAction('auth/logoutSuccess');\r\nconst logoutError = createAction('auth/logoutError');\r\n\r\nconst getCurrentUserRequest = createAction('auth/getCurrentUserRequest');\r\nconst getCurrentUserSuccess = createAction('auth/getCurrentUserSuccess');\r\nconst getCurrentUserError = createAction('auth/getCurrentUserError');\r\n\r\nexport default {\r\n  registerRequest,\r\n  registerSuccess,\r\n  registerError,\r\n  logoutRequest,\r\n  logoutSuccess,\r\n  logoutError,\r\n  loginRequest,\r\n  loginSuccess,\r\n  loginError,\r\n  getCurrentUserRequest,\r\n  getCurrentUserSuccess,\r\n  getCurrentUserError,\r\n};\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport authActions from './auth-actions';\r\n\r\nconst initialUserState = { name: null, email: null };\r\n\r\nconst user = createReducer(initialUserState, {\r\n  [authActions.registerSuccess]: (_, { payload }) => payload.user,\r\n  [authActions.loginSuccess]: (_, { payload }) => payload.user,\r\n  [authActions.logoutSuccess]: () => initialUserState,\r\n  [authActions.getCurrentUserSuccess]: (_, { payload }) => payload,\r\n});\r\n\r\nconst token = createReducer(null, {\r\n  [authActions.registerSuccess]: (_, { payload }) => payload.token,\r\n  [authActions.loginSuccess]: (_, { payload }) => payload.token,\r\n  [authActions.logoutSuccess]: () => null,\r\n});\r\n\r\nconst setError = (_, { payload }) => payload;\r\n\r\nconst error = createReducer(null, {\r\n  [authActions.registerError]: setError,\r\n  [authActions.loginError]: setError,\r\n  [authActions.logoutError]: setError,\r\n  [authActions.getCurrentUserError]: setError,\r\n});\r\n\r\nconst isAuthenticated = createReducer(false, {\r\n  [authActions.registerSuccess]: () => true,\r\n  [authActions.loginSuccess]: () => true,\r\n  [authActions.getCurrentUserSuccess]: () => true,\r\n  [authActions.registerError]: () => false,\r\n  [authActions.loginError]: () => false,\r\n  [authActions.getCurrentUserError]: () => false,\r\n  [authActions.logoutSuccess]: () => false,\r\n});\r\nexport default combineReducers({\r\n  user,\r\n  isAuthenticated,\r\n  token,\r\n  error,\r\n});\r\n","import axios from 'axios';\r\nimport authActions from './auth-actions';\r\n\r\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\r\n\r\nconst token = {\r\n  set(token) {\r\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n  },\r\n  unset() {\r\n    axios.defaults.headers.common.Authorization = '';\r\n  },\r\n};\r\n\r\nconst register = credentials => async dispatch => {\r\n  dispatch(authActions.registerRequest());\r\n\r\n  try {\r\n    const response = await axios.post('/users/signup', credentials);\r\n    token.set(response.data.token);\r\n    dispatch(authActions.registerSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(authActions.registerError(error.message));\r\n  }\r\n};\r\n\r\nconst logIn = credentials => async dispatch => {\r\n  dispatch(authActions.loginRequest());\r\n\r\n  try {\r\n    const response = await axios.post('/users/login', credentials);\r\n    token.set(response.data.token);\r\n    dispatch(authActions.loginSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(authActions.loginError(error.message));\r\n  }\r\n};\r\n\r\nconst logOut = () => async dispatch => {\r\n  dispatch(authActions.logoutRequest());\r\n\r\n  try {\r\n    await axios.post('/users/logout');\r\n    token.unset();\r\n    dispatch(authActions.logoutSuccess());\r\n  } catch (error) {\r\n    dispatch(authActions.logoutError(error.message));\r\n  }\r\n};\r\n\r\nconst getCurrentUser = () => async (dispatch, getState) => {\r\n  const {\r\n    auth: { token: persistedToken },\r\n  } = getState();\r\n  if (!persistedToken) {\r\n    return;\r\n  }\r\n  token.set(persistedToken);\r\n  dispatch(authActions.getCurrentUserRequest());\r\n  try {\r\n    const response = await axios.get('/users/current');\r\n    dispatch(authActions.getCurrentUserSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(authActions.getCurrentUserError(error.message));\r\n  }\r\n};\r\nexport default { register, logIn, logOut, getCurrentUser };\r\n","const getUserEmail = state => state.auth.user.email;\r\nconst getIsAuthenticated = state => state.auth.isAuthenticated;\r\n\r\nexport default {\r\n  getIsAuthenticated,\r\n  getUserEmail,\r\n};\r\n"],"sourceRoot":""}